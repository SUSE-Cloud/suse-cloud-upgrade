#!/bin/sh
# vim: sw=2 et
#
# Copyright 2014, SUSE
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

set -e

UPDATE_DATA_DIR=/var/lib/crowbar/upgrade-suse-cloud-2.0-to-3

if test ! -f "${UPDATE_DATA_DIR}/pre.run"; then
  echo "upgrade-suse-cloud-2.0-to-3-pre needs to be run first."
  exit 1
fi

if test -f "${UPDATE_DATA_DIR}/post.run"; then
  echo "This script has already been run."
  exit 1
fi


### Check that we can talk to crowbar
if test -z "$CROWBAR_KEY"; then
  echo "CROWBAR_KEY environment variable is not set! Has SUSE Cloud been installed?"
  exit 1
fi


### Check that currently installed version is Cloud 2.0
if test ! -f /etc/products.d/suse-cloud.prod; then
  echo "SUSE Cloud does not seem to be installed."
  exit 1
fi

# extract the version out of suse-cloud.prod
out=$(LANG=C xmllint --stream --pattern "/product/version" --debug /etc/products.d/suse-cloud.prod | grep -A 1 "matches pattern" | grep "#text" | sed 's/.* [0-9] //')
if test "x$out" != "x3"; then
  echo "Current installed version of SUSE Cloud is not 3: $out"
  exit 1
fi


### Reinstall the barclamps
# order matters because of dependencies!
for barclamp in crowbar deployer dns ipmi logging network ntp provisioner \
         database rabbitmq keystone swift ceph glance cinder neutron nova \
         nova_dashboard openstack ; do
    /opt/dell/bin/barclamp_install.rb --rpm $barclamp
done

# optional barclamps if they're present
for barclamp in updater suse-manager-client nfs_client cisco-ucs hyperv heat ceilometer ; do
    if test -d $BARCLAMP_SRC/$i; then
        /opt/dell/bin/barclamp_install.rb --rpm $barclamp
    fi
done


### Drop remaining quantum bits
knife cookbook delete -y quantum || true
knife role delete -y quantum-server || true
knife data bag delete -y barclamps quantum || true
knife data bag delete -y crowbar bc-template-quantum || true
for databag in $(knife data bag show crowbar | grep "^ *bc-quantum-"); do
  knife data bag delete -y crowbar "$databag"
done


### Drop roles that are gone
knife role delete -y ceph-mon-master || true
knife role delete -y ceph-store || true


### Crowbar can run again
# Make sure that all files are up-to-date
chef-client
touch /opt/dell/crowbar_framework/.crowbar-installed-ok

rccrowbar restart


### quantum -> neutron
# we only migrate a proposal named "default"
if test -f "${UPDATE_DATA_DIR}/quantum/bc-quantum-default.json"; then
  crowbar neutron proposal create default

  OLDJSONFILE="${UPDATE_DATA_DIR}/quantum/bc-quantum-default.json"
  JSONFILE=$(mktemp --suffix=.json)
  crowbar neutron proposal show default > "$JSONFILE"
  /opt/dell/bin/json-edit "$JSONFILE" -a attributes.neutron.use_ml2 --raw -v "false"

  for raw_attribute in use_syslog verbose debug \
    sql.pool_timeout sql.max_pool_overflow sql.min_pool_size \
    api.service_port \
    ssl.insecure ssl.cert_required ssl.generate_certs; do
    value=$(/opt/dell/barclamps/provisioner/updates/parse_node_data -a attributes.quantum.${raw_attribute} "$OLDJSONFILE" | sed "s/^[^=]*=//g")
    /opt/dell/bin/json-edit "$JSONFILE" -a attributes.neutron.${raw_attribute} --raw -v "$value"
  done


  for attribute in database_instance rabbitmq_instance keystone_instance \
    service_user service_password \
    networking_plugin networking_mode dhcp_domain \
    api.protocol api.service_host \
    ssl.keyfile ssl.certfile ssl.ca_certs; do
    value=$(/opt/dell/barclamps/provisioner/updates/parse_node_data -a attributes.quantum.${attribute} "$OLDJSONFILE" | sed "s/^[^=]*=//g")
    /opt/dell/bin/json-edit "$JSONFILE" -a attributes.neutron.${attribute} -v "$value"
  done

  if test -f "${UPDATE_DATA_DIR}/quantum/db.stamp"; then
    # only keep database info if we stamped the database for migration
    # https://wiki.openstack.org/wiki/ReleaseNotes/Havana#Known_Issues_5
    for attribute in db.user db.database; do
      value=$(/opt/dell/barclamps/provisioner/updates/parse_node_data -a attributes.quantum.${attribute} "$OLDJSONFILE" | sed "s/^[^=]*=//g")
      /opt/dell/bin/json-edit "$JSONFILE" -a attributes.neutron.${attribute} -v "$value"
    done
  fi

  value=$(/opt/dell/barclamps/provisioner/updates/parse_node_data -a deployment.quantum.elements.quantum-server "$OLDJSONFILE" | sed "s/^[^=]*=//g")
  /opt/dell/bin/json-edit "$JSONFILE" -a deployment.neutron.elements.neutron-server --raw -v "[ \"$value\" ]"

  crowbar neutron proposal edit default --file "$JSONFILE"

  rm -f "$JSONFILE"
fi


### Done
touch "${UPDATE_DATA_DIR}/post.run"
